<?xml version="1.0" encoding="UTF-8"?>
<apiConfig>
  <api id="article">
    <description>기사 기본 정보를 반환한다.</description>
    <parameter>
      <totalId desc="기사Id">[0-9]{1,9}</totalId>
    </parameter>
    <request resultName="BASIC">dps.article.basic</request>
    <request resultName="CONTENT">dps.article.content</request>
    <request resultName="REPORTER">dps.article.reporter</request>
    <request resultName="MASTERCODE">dps.article.mastercode</request>
    <request resultName="SERVICEMAP">dps.article.servicemap</request>
    <request resultName="KEYWORD">dps.article.keyword</request>
    <request resultName="CLICKCNT">dps.article.clickcnt</request>
    <request resultName="MULTI">dps.article.multi</request>
    <request resultName="SOURCE">dps.article.source</request>
    <keys>
      totalId
    </keys>
  </api>
  <api id="articleList">
    <description>기사 목록을 반환한다.</description>
    <parameter>
      <pageIndex default="1" type="number" desc="페이지번호">[0-9]{1,9}</pageIndex>
      <pageSize default="20" type="number" desc="기사갯수">[0-9]{1,9}</pageSize>
      <serviceCodeList default="" desc="서비스코드">.{1,500}</serviceCodeList>
      <masterCodeList default="" desc="마스터코드">.{1,500}</masterCodeList>
      <keywordList default="" desc="키워드">.{1,500}</keywordList>
      <usageType default="" desc="사용형태">.{1,100}</usageType>
      <contentTypeList default="" desc="컨텐트타입">.{1,100}</contentTypeList>
      <startSearchDate default="2020-08-21 00:00:00" desc="시작일">.{1,100}</startSearchDate>
      <endSearchDate default="2020-09-01 23:59:59" desc="종료일">.{1,100}</endSearchDate>
      <startTotalId default="0" type="number" desc="TOTALID시작">.{1,100}</startTotalId>
      <exceptTotalIdList default="" desc="TOTALID제외">.{1,100}</exceptTotalIdList>
      <exceptMasterCodeList default="" desc="마스터코드제외">.{1,100}</exceptMasterCodeList>
      <exceptSourceCodeList default="" desc="소스코드제외">.{1,100}</exceptSourceCodeList>
      <isExistThumbnail default="N" desc="썸네일존재">.{1,100}</isExistThumbnail>
      <usedTotalCount default="Y" desc="총건수사용">.{1,100}</usedTotalCount>
      <totalCount default="0" type="number" desc="총건수(OUT)">.{1,100}</totalCount>
    </parameter>
    <request dmlType="sp" setNames="_DATA,SOURCES" >dps.article.list</request>
    <request type="script" resultName="_TOTAL">
      var result = $ac.getAllResult();
      result.get("PARAM_MAP").get("totalCount");
    </request>
    <keys>
      pageIndex
      pageSize
      serviceCodeList
      masterCodeList
      keywordList
    </keys>
  </api>
  <api id="codelist" expire="1m">
    <description>분류별 기사 목록을 반환한다.</description>
    <parameter>
      <title desc="기사제목">.{0,1000}</title>
      <ids desc="분류" hints="codeIds" require="Y">^[0-9]{1,10}(,[0-9]{1,10})*$</ids>
      <count desc="조회 건수" default="20" type="number">^(3|5|10|20|30|100|200|300|[12345][05])$
      </count>
    </parameter>
    <request>dps.article.codelist</request>
    <request total="Y">dps.article.codelist_total</request>
    <keys>
      title
      ids
      #paging
    </keys>
  </api>
  <api id="deptlist" expire="1m">
    <description>부서별 기사 목록을 반환한다.</description>
    <parameter>
      <title desc="기사제목">.{0,1000}</title>
      <ids desc="부서" hints="deptNos" require="Y">^[0-9]{1,10}(,[0-9]{1,10})*$</ids>
      <count desc="조회 건수" default="20" type="number">^(3|5|10|20|30|100|200|300|[12345][05])$
      </count>
    </parameter>
    <request>dps.article.deptlist</request>
    <request total="Y">dps.article.deptlist_total</request>
    <keys>
      title
      ids
      #paging
    </keys>
  </api>
  <api id="bylinelist" expire="1m">
    <description>기자별 기사 목록을 반환한다.</description>
    <parameter>
      <title desc="기사제목">.{0,1000}</title>
      <ids desc="기자" hints="bylineIds" require="Y">.{0,1000}</ids>
      <count desc="조회 건수" default="20" type="number">^(3|5|10|20|30|100|200|300|[12345][05])$
      </count>
    </parameter>
    <request>dps.article.bylinelist</request>
    <request total="Y">dps.article.bylinelist_total</request>
    <keys>
      title
      ids
      #paging
    </keys>
  </api>
  <api id="reditlist" expire="1m">
    <description>편집기사 관련기사 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
      <cids desc="콘텐츠ID" hints="contentsIds">.{0,1000}</cids>
    </parameter>
    <request>dps.article.reditlist</request>
    <keys>
      ids
      cids
    </keys>
  </api>
  <api id="desking" expire="1m">
    <description>편집기사 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
    </parameter>
    <request>dps.article.desking</request>
    <request resultName="deskingR">dps.article.deskingR</request>
    <request resultName="deskingKwd">dps.article.deskingKwd</request>
    <request total="Y">dps.article.desking_total</request>
    <keys>
      ids
      #paging
    </keys>
  </api>
  <api id="deskingR" expire="1m">
    <description>편집기사 관련기사 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
      <cids desc="콘텐츠ID" hints="contentsIds">.{0,1000}</cids>
    </parameter>
    <request>dps.article.deskingR</request>
    <keys>
      ids
      cids
    </keys>
  </api>
  <api id="deskingKwd" expire="1m">
    <description>편집기사의 키워드 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
    </parameter>
    <request>dps.article.deskingKwd</request>
    <keys>
      ids
    </keys>
  </api>
  <!-- 편집기사 미리보기용 -->
  <api id="desking.work" expire="0">
    <description>미리보기용 편집기사 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
      <creator require="Y">[0-9|A-z]{1,20}</creator>
      <editionSeq desc="예약 아이디" require="Y" default="0">^[0-9]{1,6}$</editionSeq>
    </parameter>
    <request>dps.article.desking_work</request>
    <request resultName="deskingR">dps.article.deskingR_work</request>
    <request resultName="deskingKwd">dps.article.deskingKwd_work</request>
    <request total="Y">dps.article.desking_total_work</request>
    <keys>
      ids
      creator
      editionSeq
      #paging
    </keys>
  </api>
  <api id="deskingR.work" expire="0">
    <description>미리보기용 편집기사 관련기사 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
      <creator require="Y">[0-9|A-z]{1,20}</creator>
      <editionSeq desc="예약 아이디" require="Y" default="0">^[0-9]{1,6}$</editionSeq>
      <cids desc="콘텐츠ID" hints="contentsIds">.{0,1000}</cids>
    </parameter>
    <request>dps.article.deskingR_work</request>
    <keys>
      ids
      creator
      editionSeq
      cids
    </keys>
  </api>
  <api id="deskingKwd.work" expire="0">
    <description>미리보기용 편집기사의 키워드 목록을 반환한다.</description>
    <parameter>
      <ids desc="데이타셋 아이디" hints="datasetSeqs" require="Y">^[0-9]{1,6}(,[0-9]{1,6})*$</ids>
      <creator require="Y">[0-9|A-z]{1,20}</creator>
      <editionSeq desc="예약 아이디" require="Y" default="0">^[0-9]{1,6}$</editionSeq>
    </parameter>
    <request>dps.article.deskingKwd_work</request>
    <keys>
      ids
      creator
      editionSeq
    </keys>
  </api>
</apiConfig>