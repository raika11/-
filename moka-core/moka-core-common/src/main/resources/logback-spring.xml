<?xml version="1.0" encoding="UTF-8"?>

<!-- 30초마다 설정 파일의 변경을 확인한다. 파일이 변경되면 다시 로딩한다 -->
<configuration scan="true" scanPeriod="30 seconds">

	<property resource="moka_logger.properties" />
	
	<if condition='p("spring.profiles.active").equals("")'>
		<then>
			<property resource="application.properties" />
		</then>
		<else>
			<springProfile name="dev">
			    <property resource='application-dev.properties' />
			</springProfile>
			<springProfile name="qa">
			    <property resource='application-qa.properties' />
			</springProfile>
			<springProfile name="prod">
			    <property resource='application-prod.properties' />
			</springProfile>
		</else>
	</if>
	
	<!-- setting -->
	<springProfile name="qa">
		<property resource="application-qa.properties" />
	</springProfile>
	<springProfile name="dev">
		<property resource="application-dev.properties" />
	</springProfile>
	<springProfile name="prod">
		<property resource="application-prod.properties" />
	</springProfile>

	<!-- log packagename -->
	<property name="LOG_PACKAGE_NAME"
		value="${logging.packagename}" />
	<!-- log file path -->
	<property name="LOG_PATH" value="${logging.path}" />
	<!-- log file name -->
	<property name="LOG_FILE_NAME" value="${logging.file}" />
	<!-- log days -->
	<property name="LOG_DAYS" value="${logging.file.max-history}" />
	<!-- log filesize log -->
	<property name="LOG_FILESIZE_LOG"
		value="${logging.file.max-size}" />
	<!-- pattern -->
	<property name="LOG_PATTERN"
		value="${logging.pattern.console}" />
	<property name="LOG_MDC_PATTERN"
		value="${logging.pattern.mdc}" />

	<!-- console log -->
	<appender name="console"
		class="ch.qos.logback.core.ConsoleAppender">
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- 로그 파일 생성 관련 -->
	<!-- 로그 모드 -->
	<!-- log file -->
	<appender name="FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE_NAME}.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>${LOG_DAYS}</maxHistory>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>${LOG_FILESIZE_LOG}</MaxFileSize>
		</triggeringPolicy>
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>

	</appender>

	<!-- system log file -->
	<appender name="SYSTEM-FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE_NAME}-system.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}-system.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>${LOG_DAYS}</maxHistory>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>${LOG_FILESIZE_LOG}</MaxFileSize>
		</triggeringPolicy>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator
				class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
				<marker>SYSTEM</marker>
			</evaluator>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- action log file -->
	<appender name="ACTION-FILE"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${LOG_PATH}/${LOG_FILE_NAME}-action.log</file>
		<rollingPolicy
			class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}-action.%d{yyyy-MM-dd}.log
			</fileNamePattern>
			<maxHistory>${LOG_DAYS}</maxHistory>
		</rollingPolicy>
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>${LOG_FILESIZE_LOG}</MaxFileSize>
		</triggeringPolicy>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator
				class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
				<marker>ACTION</marker>
			</evaluator>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<encoder
			class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_PATTERN}</pattern>
		</encoder>
	</appender>

	<!-- action log file -->
	<appender name="USER-SIFT"
		class="ch.qos.logback.classic.sift.SiftingAppender">
		<discriminator>
			<key>userId</key>
			<defaultValue>unknown</defaultValue>
		</discriminator>
		<filter class="ch.qos.logback.core.filter.EvaluatorFilter">
			<evaluator
				class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
				<marker>USER</marker>
			</evaluator>
			<OnMatch>ACCEPT</OnMatch>
			<OnMismatch>DENY</OnMismatch>
		</filter>
		<sift>
			<!-- log file -->
			<appender name="USER-FILE"
				class="ch.qos.logback.core.rolling.RollingFileAppender">
				<file>${LOG_PATH}/${LOG_FILE_NAME}-user.log</file>
				<rollingPolicy
					class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
					<fileNamePattern>${LOG_PATH}/${LOG_FILE_NAME}-user.%d{yyyy-MM-dd}.log
					</fileNamePattern>
					<maxHistory>${LOG_DAYS}</maxHistory>
				</rollingPolicy>
				<triggeringPolicy
					class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
					<MaxFileSize>${LOG_FILESIZE_LOG}</MaxFileSize>
				</triggeringPolicy>
				<encoder
					class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
					<pattern>${LOG_MDC_PATTERN}</pattern>
				</encoder>
			</appender>
		</sift>
	</appender>

	<if condition='p("spring.profiles.active").equals("prod")'>
		<then>
			<logger name="${LOG_PACKAGE_NAME}" level="INFO" />

			<logger name="org.springframework" additivity="false">
				<level value="WARN" />
				<appender-ref ref="console" />
			</logger>

			<root level="INFO">
				<appender-ref ref="console" />
				<appender-ref ref="ACTION-FILE" />
				<appender-ref ref="SYSTEM-FILE" />
				<appender-ref ref="USER-SIFT" />
				<appender-ref ref="FILE" />
			</root>
		</then>
		<else>
			<logger name="${LOG_PACKAGE_NAME}" level="DEBUG" />

			<logger name="org.springframework" additivity="false">
				<level value="DEBUG" />
				<appender-ref ref="console" />
			</logger>

			<root level="DEBUG">
				<appender-ref ref="console" />
				<appender-ref ref="ACTION-FILE" />
				<appender-ref ref="SYSTEM-FILE" />
				<appender-ref ref="USER-SIFT" />
				<appender-ref ref="FILE" />
			</root>
		</else>
	</if>

</configuration>
