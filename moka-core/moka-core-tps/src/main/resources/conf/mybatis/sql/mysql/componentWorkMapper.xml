<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jmnet.moka.core.tps.mvc.component.mapper.ComponentWorkMapper">

	<!-- 기존의 작업용 수동컴포넌트 삭제 -->
	<delete id="deleteByCreator" parameterType="string">
		DELETE FROM WMS_COMPONENT_WORK WHERE CREATOR = #{creator}
	</delete>
	
	<!-- 페이지의 수동컴포넌트를 작업자용 컴포넌트로 일괄 등록. edition고려안됨. -->
	<insert id="bulkInsert" parameterType="jmnet.moka.core.tps.common.dto.WorkSearchDTO">
		INSERT INTO WMS_COMPONENT_WORK (COMPONENT_SEQ, CREATOR, EDITION_SEQ, TEMPLATE_SEQ, DATASET_SEQ, DATA_TYPE, SNAPSHOT_YN, SNAPSHOT_BODY, COMPONENT_ORDER, CREATE_YMDT)
		SELECT M.COMPONENT_SEQ, #{creator}, 0, C.TEMPLATE_SEQ, C.DATASET_SEQ, C.DATA_TYPE, C.SNAPSHOT_YN, C.SNAPSHOT_BODY, M.REL_ORDER, #{createYmdt} FROM 
		(
			SELECT COMPONENT_SEQ, OUT_ORDER, IN_ORDER, (@rownum := @rownum + 1) AS REL_ORDER
			FROM (
				SELECT A.COMPONENT_SEQ, PREL.REL_ORDER AS OUT_ORDER, PREL.REL_ORDER AS IN_ORDER
				FROM WMS_COMPONENT A, WMS_PAGE_REL PREL
				WHERE A.DATA_TYPE = 'DESK'
					AND A.COMPONENT_SEQ = PREL.REL_SEQ
					AND PREL.REL_TYPE = 'CP'
					AND PREL.PAGE_SEQ = #{pageSeq}
				UNION	
				SELECT A.COMPONENT_SEQ, PREL.REL_ORDER AS OUT_ORDER, CTREL.REL_ORDER AS IN_ORDER
				FROM WMS_COMPONENT A, WMS_PAGE_REL PREL, WMS_CONTAINER_REL CTREL 
				WHERE A.COMPONENT_SEQ = CTREL.REL_SEQ 
				AND A.DATA_TYPE = 'DESK'
				AND PREL.REL_TYPE = 'CT' 
				AND PREL.PAGE_SEQ = #{pageSeq}
				AND CTREL.CONTAINER_SEQ = PREL.REL_SEQ
				AND CTREL.REL_TYPE = 'CP'
				AND CTREL.REL_SEQ NOT IN (SELECT REL_SEQ  FROM WMS_PAGE_REL  WHERE PAGE_SEQ = #{pageSeq} AND REL_TYPE ='CP') 
			) AS X, (SELECT @rownum:= 0) AS TMP
			ORDER BY  OUT_ORDER ASC, IN_ORDER ASC
		) AS M, WMS_COMPONENT C
		WHERE M.COMPONENT_SEQ = C.COMPONENT_SEQ
	</insert>
	
	<!-- 페이지에서 수동컴포넌트인 것 모두 조회(복수) -->
	<select id="findComponentsWorkAll" 
		parameterType="jmnet.moka.core.tps.common.dto.WorkSearchDTO" 
		resultType="DeskingComponentWorkVO"
	>
		SELECT 
			(SELECT SEQ FROM WMS_COMPONENT_WORK CW WHERE CW.CREATOR = #{creator} AND CW.COMPONENT_SEQ = X.COMPONENT_SEQ LIMIT 1) AS SEQ, 
			X.* 
		FROM (
			SELECT 
				DISTINCT			
				A.COMPONENT_SEQ,
				CP.COMPONENT_NAME,
				A.CREATOR,
				A.EDITION_SEQ,
				A.TEMPLATE_SEQ,
				TP.TEMPLATE_NAME,
				TP.TEMPLATE_WIDTH,
				A.DATASET_SEQ,
				A.DATA_TYPE,
				A.SNAPSHOT_YN,
				A.SNAPSHOT_BODY,
				A.COMPONENT_ORDER,
				CP.SEARCH_CODE_ID,
				CP.SEARCH_LANG,
				CP.SEARCH_SERVICE_TYPE
			FROM WMS_COMPONENT_WORK A, WMS_COMPONENT CP, WMS_TEMPLATE TP
			WHERE 
				A.COMPONENT_SEQ = CP.COMPONENT_SEQ
				<if test="creator != null and creator != ''">
				AND A.CREATOR = #{creator}
				</if>
				<if test="editionSeq != null and editionSeq != ''">
				AND A.EDITION_SEQ = #{editionSeq}		
				</if>
				AND A.TEMPLATE_SEQ = TP.TEMPLATE_SEQ
		) AS X
		ORDER BY X.COMPONENT_ORDER ASC			
	</select>
		
	<!-- 수동컴포넌트 조회(단수) -->
	<select id="findComponentsWorkBySeq" 
		parameterType="Long" 
		resultType="DeskingComponentWorkVO"
	>
		SELECT 
			A.SEQ,
			A.COMPONENT_SEQ,
			CP.COMPONENT_NAME,
			A.CREATOR,
			A.EDITION_SEQ,
			A.TEMPLATE_SEQ,
			TP.TEMPLATE_NAME,
			TP.TEMPLATE_WIDTH,
			A.DATASET_SEQ,
			A.DATA_TYPE,
			A.SNAPSHOT_YN,
			A.SNAPSHOT_BODY,
			A.COMPONENT_ORDER,
			CP.SEARCH_CODE_ID,
			CP.SEARCH_LANG,
			CP.SEARCH_SERVICE_TYPE
		FROM WMS_COMPONENT_WORK A, WMS_COMPONENT CP, WMS_TEMPLATE TP
		WHERE A.SEQ = #{seq}
			AND A.COMPONENT_SEQ = CP.COMPONENT_SEQ 
			AND A.TEMPLATE_SEQ = TP.TEMPLATE_SEQ 
	</select>
	
	<!-- 예약 컴포넌트 목록 조회 -->
	<select id="findEditionAll" parameterType="Long" resultType="EditionVO">
		SELECT E.EDITION_SEQ, E.CREATOR, M.COMPONENT_SEQ, E.EDITION_NAME, C.TEMPLATE_SEQ, C.DATASET_SEQ, E.EDITION_START_YMDT, C.DATA_TYPE, C.SNAPSHOT_YN, C.SNAPSHOT_BODY FROM 
		(
			SELECT COMPONENT_SEQ, OUT_ORDER, IN_ORDER, (@rownum := @rownum + 1) AS REL_ORDER
			FROM (
				SELECT A.COMPONENT_SEQ, PREL.REL_ORDER AS OUT_ORDER, PREL.REL_ORDER AS IN_ORDER
				FROM WMS_EDITION ED, WMS_COMPONENT A, WMS_PAGE_REL PREL
				WHERE ED.COMPONENT_SEQ = A.COMPONENT_SEQ
					AND A.DATA_TYPE = 'DESK'
					AND A.COMPONENT_SEQ = PREL.REL_SEQ
					AND PREL.REL_TYPE = 'CP'
					AND PREL.PAGE_SEQ = #{pageSeq}
				UNION	
				SELECT A.COMPONENT_SEQ, PREL.REL_ORDER AS OUT_ORDER, CTREL.REL_ORDER AS IN_ORDER
				FROM WMS_EDITION ED, WMS_COMPONENT A, WMS_PAGE_REL PREL, WMS_CONTAINER_REL CTREL 
				WHERE ED.COMPONENT_SEQ = A.COMPONENT_SEQ
				AND A.COMPONENT_SEQ = CTREL.REL_SEQ 
				AND A.DATA_TYPE = 'DESK'
				AND PREL.REL_TYPE = 'CT' 
				AND PREL.PAGE_SEQ = #{pageSeq}
				AND CTREL.CONTAINER_SEQ = PREL.REL_SEQ
				AND CTREL.REL_TYPE = 'CP'
				AND CTREL.REL_SEQ NOT IN (SELECT REL_SEQ  FROM WMS_PAGE_REL  WHERE PAGE_SEQ = #{pageSeq} AND REL_TYPE ='CP') 
			) AS X, (SELECT @rownum:= 0) AS TMP
			ORDER BY  OUT_ORDER ASC, IN_ORDER ASC
		) AS M, WMS_EDITION E, WMS_COMPONENT C
		WHERE M.COMPONENT_SEQ = E.COMPONENT_SEQ
		AND E.EDITION_START_YMDT > DATE_FORMAT(NOW(),'%Y%m%d%H%i%s')
		AND M.COMPONENT_SEQ = C.COMPONENT_SEQ
		ORDER BY M.REL_ORDER ASC, E.EDITION_START_YMDT DESC 
	</select>
	
</mapper>